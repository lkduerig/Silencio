<?php

/**
* @file
* adds a formatter for text fields that creates a facebook button
*
*/



/**
 * Implements hook_field_formatter_info().
 */
function surferfield_field_formatter_info() {
  return array(
    'surferfield_formatter' => array( // Machine name of the formatter.
      'label' => t('Wavesurfer'),
      'field types' => array('file'), // This will only be available to text
      // fields.
    ),
  );
}



/**
 * Implements hook_field_formatter_settings_form().
 */
function surferfield_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  // This gets the view_mode where our settings are stored.
  $display = $instance['display'][$view_mode];
  // This gets the actual settings.
  $settings = $display['settings'];
  // Initialize the element variable.
  $element = array();
  // Add your select box.

  return $element;
}

/**
 * Implements hook_field_formatter_view().
 */
function surferfield_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {

  $element = array();

  switch ($display['type']) {
    case 'surferfield_formatter':
      foreach ($items as $delta => $item) {
        $url = empty($item['uri']) ? '' : file_create_url($item['uri']);
        $element[$delta] = array(
          '#theme' => 'surferfield_surferfield',
          '#url' => $url,
        );
        $element['#attached']['js'][] = drupal_get_path('module', 'surferfield') . '/js/wavesurfer.min.js';
        $element['#attached']['js'][] = drupal_get_path('module', 'surferfield') . '/js/surfer.field.js';
      }
      break;
  }

  return $element;
}

/**
 * Implements hook_theme().
 */
function surferfield_theme() {
  return array(
    'surferfield_surferfield' => array(
      'template' => 'surferfield',
      'variables' => array(
        'url' => NULL,
      ),
    ),
  );
}